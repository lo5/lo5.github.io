<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Wrong Technology</title>
	<subtitle>A web log about stuff.</subtitle>
	
	<link href="https://wrong.technology/feed/feed.xml" rel="self"/>
	<link href="https://wrong.technology/"/>
	<updated>2022-07-08T00:00:00Z</updated>
	<id>https://wrong.technology/</id>
	<author>
		<name>Prithvi Prabhu</name>
		<email>prithvi.prabhu@gmail.com</email>
	</author>
	
	<entry>
		<title>Back button support</title>
		<link href="https://wrong.technology/posts/back-button-support/"/>
		<updated>2022-07-08T00:00:00Z</updated>
		<id>https://wrong.technology/posts/back-button-support/</id>
		<content type="html">&lt;p&gt;We&#39;re trying to see if it&#39;s possible to provide some kind of automatic back-button support for Nitro apps without losing state.&lt;/p&gt;
&lt;h2 id=&quot;goals&quot; tabindex=&quot;-1&quot;&gt;Goals &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/back-button-support/#goals&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The primary requirements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preserve Nitro&#39;s programming model.&lt;/li&gt;
&lt;li&gt;Support history / back-button traversal.&lt;/li&gt;
&lt;li&gt;Don&#39;t lose state when traversing back and forth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For reference, the sixth rule in &lt;a href=&quot;https://www.cs.umd.edu/users/ben/goldenrules.html&quot;&gt;Ben Shneiderman&#39;s The Eight Golden Rules of Interface Design&lt;/a&gt; says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Permit easy reversal of actions.&lt;/strong&gt;&lt;br /&gt;
As much as possible, actions should be reversible. This feature relieves anxiety, since users know that errors can be undone, and encourages exploration of unfamiliar options. The units of reversibility may be a single action, a data-entry task, or a complete group of actions, such as entry of a name-address block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is complicated, to say the least, but necessary. Naturally, everyone is asking for it.&lt;/p&gt;
&lt;h2 id=&quot;solution&quot; tabindex=&quot;-1&quot;&gt;Solution &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/back-button-support/#solution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s one attempt to address it. The solution ends up being a tad more verbose compared to vanilla Nitro apps.&lt;/p&gt;
&lt;p&gt;There are 3 refactorings you&#39;ll need to do to get this working.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Place each &lt;code&gt;view()&lt;/code&gt; in a separate function.&lt;/li&gt;
&lt;li&gt;To show the next view, call &lt;code&gt;view.jump(do_something)&lt;/code&gt; instead of &lt;code&gt;do_something(view)&lt;/code&gt;. &lt;code&gt;view.jump()&lt;/code&gt; will be released in v0.13.&lt;/li&gt;
&lt;li&gt;Pass these functions as &lt;code&gt;routes&lt;/code&gt; when creating the root &lt;code&gt;View()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;demo&quot; tabindex=&quot;-1&quot;&gt;Demo &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/back-button-support/#demo&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s a basic 5-page UI that demonstrates this:&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;https://wrong.technology/img/back-button-support.mp4&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; h2o_nitro &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; box&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; option&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; h2o_nitro_web &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; web_directory&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; first_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; last_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; first_name&lt;br /&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; last_name&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Person&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Boaty&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;McBoatface&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;father &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Person&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Papa&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;McBoatface&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mother &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Person&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Mama&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;McBoatface&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ask_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    person&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;state&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;person&lt;br /&gt;    person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;# Step 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Your first name?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Your last name?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jump&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_father_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ask_father_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    father&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;state&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;father&lt;br /&gt;    father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;# Step 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Father&#39;s first name?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Father&#39;s last name?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jump&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_mother_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;ask_mother_name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    mother&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Person &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;state&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mother&lt;br /&gt;    mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;# Step 3&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Mother&#39;s first name?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Mother&#39;s last name?&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jump&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;show_results&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;show_results&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    state&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; State &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;state&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;# Results&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;Your name: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;Your father&#39;s name: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;father&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&quot;Your mother&#39;s name: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mother&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;last_name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        halt&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;context&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;state&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; State&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&#39;# Welcome to the wizard!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&#39;Use the back button, Luke!&#39;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jump&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;nitro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    main&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Hello Nitro!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    caption&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;v1.0&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    routes&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;        option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_father_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ask_mother_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        option&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;show_results&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/lo5/2d1fe22123ce84ec60c1ba9fa6e6d6cb&quot;&gt;Complete source&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/back-button-support/#summary&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Compared to vanilla Nitro apps, the solution above adds about 3 extra lines of code per page:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;def&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Reading the existing state.&lt;/li&gt;
&lt;li&gt;Jumping to the next view.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Overall, I&#39;m happy with the solution so far. There&#39;s a possibility that the you might forget to add one or more functions to the View&#39;s &lt;code&gt;routes&lt;/code&gt; list, but this can be mitigated easily by having a custom &lt;code&gt;@route&lt;/code&gt; annotation do this automatically for you.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>A Revertible Python dictionary</title>
		<link href="https://wrong.technology/posts/revertible-python-dict/"/>
		<updated>2022-07-07T00:00:00Z</updated>
		<id>https://wrong.technology/posts/revertible-python-dict/</id>
		<content type="html">&lt;p&gt;Here&#39;s a Python dictionary-like class that supports undo/redo and transactions:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/lo5/2bf02c6455617aa65b244fa11cd1926e&quot;&gt;View source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wrote it while trying to solve back-button support in Nitro apps, but ended up taking a different, simpler approach, which I&#39;ll describe in a later blog post.&lt;/p&gt;
&lt;p&gt;The dict lets you do this:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;    d &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RevertibleDict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; d&lt;br /&gt;    d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;    d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;undo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; d&lt;br /&gt;    d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;redo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works for nested keys, too, e.g. &lt;code&gt;d[&#39;x&#39;, &#39;y&#39;] = 42&lt;/code&gt;, since Python treats &lt;code&gt;&#39;x&#39;, &#39;y&#39;&lt;/code&gt; as the tuple &lt;code&gt;(&#39;x&#39;, &#39;y&#39;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Setting individual entries is not useful in itself. Typically, you&#39;d want to change multiple entries and revert a whole batch of changes.&lt;/p&gt;
&lt;p&gt;Enter transactions:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;    d &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; RevertibleDict&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;with&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;        d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;        d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;br /&gt;        d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;44&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;44&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;44&lt;/span&gt;&lt;br /&gt;    d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;undo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; d&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;y&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; d&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; d&lt;br /&gt;    d&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;redo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;y&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;43&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;assert&lt;/span&gt; d&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;z&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;44&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The transaction is committed when exiting the &lt;code&gt;with&lt;/code&gt; context. If an exception occurs, the changes are rolled back.&lt;/p&gt;
&lt;p&gt;The entire implementation is ~125 lines of code, and includes a generic undo/redo history manager, if you want to author different kinds of revertible data structures.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro v0.12 - live change handling</title>
		<link href="https://wrong.technology/posts/nitro-live-handling/"/>
		<updated>2022-07-05T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-live-handling/</id>
		<content type="html">&lt;p&gt;Until now, Nitro apps could only respond to button or menu clicks. v0.12 changes all that.&lt;/p&gt;
&lt;p&gt;To know about changes to a component&#39;s input as soon as it happens, set &lt;code&gt;live=True&lt;/code&gt; on that component. You can set this on more than one component.&lt;/p&gt;
&lt;h2 id=&quot;examples&quot; tabindex=&quot;-1&quot;&gt;Examples &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-live-handling/#examples&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here&#39;s a spinbox with &lt;code&gt;live=True&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;speed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;42&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Starting value&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    speed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Speed (km/h)&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;speed&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; live&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&#39;Your speed is &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;speed&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; km/h&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;video src=&quot;https://wrong.technology/img/live-handling-spinner.mp4&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Another example, using a checkbox:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;keep_signed_in &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    keep_signed_in &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Remember me&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;keep_signed_in&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; live&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string&quot;&gt;&quot;Keep me signed in.&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; keep_signed_in &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Don&#39;t keep me signed in.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;video src=&quot;https://wrong.technology/img/live-handling-checkbox.mp4&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;p&gt;Same technique, with a dropdown menu:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;choice &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    choice &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;        box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Choose a color&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mode&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;menu&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;choice&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; live&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;            options&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;green&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;yellow&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;orange&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;red&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token string-interpolation&quot;&gt;&lt;span class=&quot;token string&quot;&gt;f&#39;You chose &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;choice&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&#39;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;video src=&quot;https://wrong.technology/img/live-handling-dropdown.mp4&quot; autoplay=&quot;&quot; loop=&quot;&quot; muted=&quot;&quot;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;no-callbacks&quot; tabindex=&quot;-1&quot;&gt;No callbacks &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-live-handling/#no-callbacks&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you&#39;re familiar with Nitro&#39;s API, you&#39;ll notice that the above examples retain the simplicity of Nitro&#39;s callback-free API. To listen to changes and respond, simply place your code inside a &lt;code&gt;while&lt;/code&gt; loop. When you&#39;re done listening, &lt;code&gt;break&lt;/code&gt; out of the &lt;code&gt;while&lt;/code&gt; loop (not shown for brevity).&lt;/p&gt;
&lt;p&gt;This new capability, combined with &lt;a href=&quot;https://nitro.h2o.ai/editing/&quot;&gt;partial updates&lt;/a&gt; (&amp;quot;edits&amp;quot;) makes it possible to author Nitro apps that are equivalent in power and performance to &lt;a href=&quot;https://github.com/h2oai/wave&quot;&gt;H2O Wave&lt;/a&gt; apps.&lt;/p&gt;
&lt;h2 id=&quot;next-steps&quot; tabindex=&quot;-1&quot;&gt;Next steps &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-live-handling/#next-steps&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Over the next few weeks, you&#39;ll see a lot more examples of Nitro in action, but there&#39;s a pile of work to be done first to beef up the breadth of available widgets. Nitro is actively being used to develop some exciting new capabilities in &lt;a href=&quot;https://h2o.ai/platform/ai-cloud/make/h2o-driverless-ai/&quot;&gt;Driverless AI&lt;/a&gt;, so getting those features out takes priority over everything else for now.&lt;/p&gt;
&lt;p&gt;Also, I spent some time organizing active/upcoming issues in our repo. There&#39;s now a &lt;a href=&quot;https://github.com/h2oai/nitro/issues/15&quot;&gt;backlog&lt;/a&gt; and &lt;a href=&quot;https://github.com/h2oai/nitro/milestones&quot;&gt;milestones&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next release, 0.13, will ship with incremental improvements to improving how wizards look and behave, including some new capabilities to help user onboarding and &lt;a href=&quot;https://www.cs.umd.edu/users/ben/goldenrules.html&quot;&gt;reduce short-term memory load&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nitro.h2o.ai/change-log/#v0120&quot;&gt;View the full change log&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro in Web Assembly - Performance</title>
		<link href="https://wrong.technology/posts/nitro-wasm-perf/"/>
		<updated>2022-06-30T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-wasm-perf/</id>
		<content type="html">&lt;p&gt;Here&#39;s some rough insight into what happens when you run a Nitro app entirely in-browser.&lt;/p&gt;
&lt;h2 id=&quot;without-wasm&quot; tabindex=&quot;-1&quot;&gt;Without Wasm &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm-perf/#without-wasm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nitro requires 717kB of dependencies in the browser, regardless of whether you&#39;re using Wasm or not (717kB gzip / 3.3MB raw):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;styles.css&lt;/td&gt;
&lt;td&gt;7.5kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;main.css&lt;/td&gt;
&lt;td&gt;1.5KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;main.js&lt;/td&gt;
&lt;td&gt;3.2MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;loading.gif&lt;/td&gt;
&lt;td&gt;18.1kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[font].woff2&lt;/td&gt;
&lt;td&gt;33.5kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[font].css&lt;/td&gt;
&lt;td&gt;1.3kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;favicon.ico&lt;/td&gt;
&lt;td&gt;15.4kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3.3MB&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Once the above dependencies are loaded, application startup is near-instantaneous.&lt;/p&gt;
&lt;h2 id=&quot;adding-wasm&quot; tabindex=&quot;-1&quot;&gt;Adding Wasm &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm-perf/#adding-wasm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The same app on Wasm requires an additional 8.15MB (8.15MB gzip / 18.19MB raw):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Size (gzip / raw)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;nitride.js&lt;/td&gt;
&lt;td&gt;1.8kB / 5.4kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h2o_nitro-[...].whl&lt;/td&gt;
&lt;td&gt;12.8kB / 12.8kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyodide.js&lt;/td&gt;
&lt;td&gt;14.8kB / 46.0kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packages.json&lt;/td&gt;
&lt;td&gt;5.5kB / 28.0kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyodide_py.tar&lt;/td&gt;
&lt;td&gt;103kB / 103kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyodide.asm.js&lt;/td&gt;
&lt;td&gt;322kB / 2MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyodide.asm.data&lt;/td&gt;
&lt;td&gt;3.4MB / 5.4MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyodide.asm.wasm&lt;/td&gt;
&lt;td&gt;3.2MB / 9.5MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;distutils.tar&lt;/td&gt;
&lt;td&gt;984kB / 984kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;micropip-[...].whl&lt;/td&gt;
&lt;td&gt;16.8kB / 16.8kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pyparsing-[...].whl&lt;/td&gt;
&lt;td&gt;98.8kB / 98.8kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;packaging-[...].whl&lt;/td&gt;
&lt;td&gt;41.4kB / 41.4kB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;8.15MB / 18.19MB&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Of these, Nitro&#39;s dependencies are negligible (~14kB).&lt;/p&gt;
&lt;p&gt;Downloading and initializing the above dependencies adds 3-5 seconds of overhead. YMMV depending on network, CPU and browser.&lt;/p&gt;
&lt;p&gt;Overall, not bad, but the overhead is noticeable.&lt;/p&gt;
&lt;p&gt;That said, notice that Nitro runs unmodified in browsers. The same ~13kB &lt;code&gt;h2o-nitro&lt;/code&gt; wheel from PyPI runs as is, with an additional 1.8kB for &lt;code&gt;nitride.js&lt;/code&gt;, the application runtime atop Pyodide.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro v0.11 shipped with Web Assembly support</title>
		<link href="https://wrong.technology/posts/nitro-wasm/"/>
		<updated>2022-06-27T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-wasm/</id>
		<content type="html">&lt;p&gt;Nitro 0.11 can run apps entirely in-browser.&lt;/p&gt;
&lt;h2 id=&quot;what-does-this-mean&quot; tabindex=&quot;-1&quot;&gt;What does this mean? &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm/#what-does-this-mean&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ordinarily, your Nitro app runs on a server (or cloud) somewhere, and displays interactive user interfaces in your web browser:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
                    Network
                       │            Python
                       │           ┌──────────────────┐
                       │           │  Nitro           │
                       │           │ ┌──────────────┐ │
                       │           │ │              │ │
                       │           │ │     App      │ │
                       │           │ │              │ │
                       │           │ └─────▲─┬──────┘ │
  Browser              │           │       │ │        │
 ┌───────────┐         │           │       │ │        │
 │           │         │           │ ┌─────┴─▼──────┐ │
 │           │     I/O │           │ │              │ │
 │    UI     └─────────┼───────────┼─►    Flask     │ │
 │           ◄─────────┼───────────┼─┐              │ │
 │           │         │           │ └──────────────┘ │
 └───────────┘         │           │                  │
                       │           └──────────────────┘
                       │
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With Nitro 0.11, you can put your Python code (and packages) on a static website somewhere (like &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; or &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html&quot;&gt;S3 static websites&lt;/a&gt;), and have it load and execute entirely inside a web browser:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                        Network
                                           │
                   Python                  │
                  ┌──────────────────┐     │
                  │  Nitro           │     │
                  │ ┌──────────────┐ │     │
                  │ │              │ │     │
                  │ │     App      │ │     │    Web Server
                  │ │              │ │     │   ┌──────────────┐
                  │ └─────▲─┬──────┘ │     │   │              │
  Browser         │       │ │        ◄─────┼───┤ Static Files │
 ┌───────────┐    │       │ │        │     │   │              │
 │           │    │ ┌─────┴─┴──────┐ │     │   └──────────────┘
 │           │    │ │              │ │     │
 │    UI     └────┼─►    Nitride   │ │     │
 │           ◄────┼─┐              │ │     │
 │           │    │ └──────────────┘ │     │
 └───────────┘    │                  │     │
                  └──────────────────┘     │
                                           │

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;how-is-this-possible&quot; tabindex=&quot;-1&quot;&gt;How is this possible? &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm/#how-is-this-possible&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nitro 0.11 introduces an application runtime called &lt;em&gt;Nitride&lt;/em&gt;, built atop &lt;a href=&quot;https://pyodide.org/&quot;&gt;Pyodide&lt;/a&gt;, a port of CPython to Web Assembly.&lt;/p&gt;
&lt;p&gt;Nitride is a tiny (~5KB) layer that makes it possible to spawn a Python process in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;Web Worker&lt;/a&gt;, which then controls the UI. The UI then continues to operate normally, assuming it&#39;s communicating with a Nitro server over the network. In reality, the Nitro &amp;quot;server&amp;quot; is simply running locally on a separate operating system thread.&lt;/p&gt;
&lt;h2 id=&quot;what-kind-of-apps-is-this-useful-for&quot; tabindex=&quot;-1&quot;&gt;What kind of apps is this useful for? &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm/#what-kind-of-apps-is-this-useful-for&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Running apps this way is useful only if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You don&#39;t want to host your Python app in the cloud (and deal with everything else related to hosting, including monitoring, uptime, etc.)&lt;/li&gt;
&lt;li&gt;Your app doesn&#39;t need heavy compute, and you&#39;re fine with whatever processing power is available on your user&#39;s computer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;what-does-it-look-like-in-practice&quot; tabindex=&quot;-1&quot;&gt;What does it look like in practice? &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm/#what-does-it-look-like-in-practice&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Broadly, there are two ways to run your app:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Embed your code directly in HTML using a &lt;code&gt;&amp;lt;script type=&amp;quot;text/python&amp;quot;&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;li&gt;(Recommended) Provide a configuration in a &lt;code&gt;&amp;lt;script type=&amp;quot;application/nitro&amp;quot;&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Embedding Python code directly in HTML looks like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text/python&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;from h2o_nitro &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; AsyncView &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; box&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; def &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;What is your name?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Boaty McBoatface&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    feel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;token string&quot;&gt;&#39;How do you feel today, {name}?&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;intrigued&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;token string&quot;&gt;&#39;What a coincidence, {name}, I feel {feel}, too!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;nitro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Hello Nitro!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; caption&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;v1.0&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although the above technique works, it&#39;s more convenient to write programs in &lt;code&gt;.py&lt;/code&gt; modules and load them dynamically using a YAML configuration that describes your app:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;application/nitro&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; python&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;entrypoint&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; example_hello&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;py&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also load external packages, wheel files, and modules dynamically, like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;application/nitro&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; python&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;packages&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; numpy&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; pandas&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; bokeh&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;bundles&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; h2o&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;nitro&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;bokeh&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; example_bokeh_util&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;py&lt;br /&gt;  &lt;span class=&quot;token literal-property property&quot;&gt;entrypoint&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; example_bokeh&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;py&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more comprehensive documentation, see &lt;a href=&quot;https://nitro.h2o.ai/wasm/&quot;&gt;https://nitro.h2o.ai/wasm/&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;summary&quot; tabindex=&quot;-1&quot;&gt;Summary &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitro-wasm/#summary&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The primary reason I added support for Web Assembly is to make our interactive docs run in-browser, and those docs are a &lt;em&gt;lot&lt;/em&gt; more interesting to play with than the static documentation :)&lt;/p&gt;
&lt;p&gt;Also, if you&#39;re interested in things like PyScript, Nitro offers a &amp;quot;batteries-included&amp;quot; approach - a huge variety of interactive components that you can snap together quickly and build applications, instead of using Python as a substitute for Javascript and futzing around with the browser DOM. Anything you can do with PyScript, you can do with Nitro, too!&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Pyodide for Nitro: Progress update 2</title>
		<link href="https://wrong.technology/posts/pyodide-update-2/"/>
		<updated>2022-06-22T00:00:00Z</updated>
		<id>https://wrong.technology/posts/pyodide-update-2/</id>
		<content type="html">&lt;p&gt;This is now looking real.&lt;/p&gt;
&lt;p&gt;Nitro 0.11 will ship with Pyodide support this week. Party.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run Nitro apps entirely in-browser using Python-in-Wasm.&lt;/li&gt;
&lt;li&gt;Embed Python code in HTML using &lt;code&gt;text/python&lt;/code&gt; script tags.&lt;/li&gt;
&lt;li&gt;Load external &lt;code&gt;.py&lt;/code&gt; modules.&lt;/li&gt;
&lt;li&gt;Tiny (~13KB) wheel.&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Theming Nitro apps</title>
		<link href="https://wrong.technology/posts/nitro-themes/"/>
		<updated>2022-06-20T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-themes/</id>
		<content type="html">&lt;p&gt;Nitro is pretty simple to theme - just set the foreground, background, and accent colors, and tints/shades are automatically derived for you.&lt;/p&gt;
&lt;p&gt;Makes it easy to get color schemes that match your brand.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/theming/&quot;&gt;https://nitro.h2o.ai/theming/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/nitro-theme1.png&quot; alt=&quot;theme1&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;https://wrong.technology/img/nitro-theme2.png&quot; alt=&quot;theme2&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;https://wrong.technology/img/nitro-theme3.png&quot; alt=&quot;theme3&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;https://wrong.technology/img/nitro-theme4.png&quot; alt=&quot;theme4&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Pyodide for Nitro: Progress update</title>
		<link href="https://wrong.technology/posts/pyodide-update-1/"/>
		<updated>2022-06-19T00:00:00Z</updated>
		<id>https://wrong.technology/posts/pyodide-update-1/</id>
		<content type="html">&lt;p&gt;This turned out to be fun weekend hack. The Nitro runtime for Pyodide is ~13KB so far. Stupidly tiny.&lt;/p&gt;
&lt;p&gt;If all goes well, the interactive docs should run in-browser.&lt;/p&gt;
&lt;p&gt;After that, a playground with Monaco + Pyodide + Nitro should be another weekend hack.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro v0.10 shipped with modifiable UIs</title>
		<link href="https://wrong.technology/posts/nitro-ui-modifiable/"/>
		<updated>2022-06-17T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-ui-modifiable/</id>
		<content type="html">&lt;p&gt;H2O Nitro v0.10 is released.&lt;/p&gt;
&lt;p&gt;UIs are now modifiable: insert, update, remove parts efficiently using the same, simple API.&lt;/p&gt;
&lt;p&gt;Hints read like plain English: &amp;quot;insert after&amp;quot;, &amp;quot;remove before&amp;quot;, &amp;quot;view at&amp;quot;, and so on.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/editing/&quot;&gt;https://nitro.h2o.ai/editing/&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Display some boxes:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Blue 1&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$blue&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Blue 2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$blue&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;blue2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Blue 3&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$blue&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Append a box:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Appended&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$lava&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    insert&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Insert a box before `blue2`:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Inserted&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$lava&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    insert&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; before&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;blue2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Overwrite two boxes with three boxes after `blue2`:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Overwritten 1&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$lava&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Overwritten 2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$lava&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Overwritten 3&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; background&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;$lava&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    after&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;blue2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Remove everything before `blue2`:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;remove&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; before&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;blue2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro client/server protocol documentation</title>
		<link href="https://wrong.technology/posts/protocol-docs/"/>
		<updated>2022-06-16T00:00:00Z</updated>
		<id>https://wrong.technology/posts/protocol-docs/</id>
		<content type="html">&lt;p&gt;The client/server protocol used in Nitro has some basic documentation now.&lt;/p&gt;
&lt;p&gt;We should be able to start some initial work on R and Go language support once v0.11 ships.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/protocol/&quot;&gt;https://nitro.h2o.ai/protocol/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nitro.h2o.ai/protocol/&quot;&gt;&lt;img src=&quot;https://wrong.technology/img/protocol-docs.png&quot; alt=&quot;Protocol docs&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro apps need to work entirely in-browser</title>
		<link href="https://wrong.technology/posts/pyodide-idea/"/>
		<updated>2022-06-15T00:00:00Z</updated>
		<id>https://wrong.technology/posts/pyodide-idea/</id>
		<content type="html">&lt;p&gt;Idea from customer, and now a stretch goal for July 2022:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run Nitro apps entirely in-browser via &lt;a href=&quot;https://pyodide.org/&quot;&gt;Pyodide&lt;/a&gt;. No HTML/JS/CSS knowledge required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Should make it simpler to build apps compared to starting from scratch with &lt;a href=&quot;https://pyscript.net/&quot;&gt;PyScript&lt;/a&gt;, which appears to be a thin layer over Pyodide.&lt;/p&gt;
&lt;p&gt;Also, video games once graphics are in ;)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Writing plugins for Nitro</title>
		<link href="https://wrong.technology/posts/writing-plugins/"/>
		<updated>2022-06-13T00:00:00Z</updated>
		<id>https://wrong.technology/posts/writing-plugins/</id>
		<content type="html">&lt;p&gt;It&#39;s easy to write little extensions to Nitro if you know a little Javascript. The Bokeh, Matplotlib, Seaborn and Altair plugins use the same technique.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/writing-plugins/&quot;&gt;https://nitro.h2o.ai/writing-plugins/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nitro.h2o.ai/writing-plugins/&quot;&gt;&lt;img src=&quot;https://wrong.technology/img/writing-plugins.png&quot; alt=&quot;Writing Plugins&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitrogen released</title>
		<link href="https://wrong.technology/posts/nitro-nitrogen/"/>
		<updated>2022-06-10T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-nitrogen/</id>
		<content type="html">&lt;p&gt;Nitro v0.9&#39;s &lt;code&gt;nitro run&lt;/code&gt; command understands &lt;em&gt;Nitrogen&lt;/em&gt;, a mini-language similar in principle to Dockerfiles. Put Nitrogen in Python comments. Makes sharing little single-file #apps easy. Saves users from repetitive installation instructions.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/nitrogen/&quot;&gt;https://nitro.h2o.ai/nitrogen/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nitro.h2o.ai/nitrogen/&quot;&gt;&lt;img src=&quot;https://wrong.technology/img/nitro-nitrogen.png&quot; alt=&quot;Nitrogen&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitro v0.9 shipped with CLI</title>
		<link href="https://wrong.technology/posts/nitro-cli-release/"/>
		<updated>2022-06-10T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitro-cli-release/</id>
		<content type="html">&lt;p&gt;Screencast: &lt;a href=&quot;https://twitter.com/CrunchingData/status/1535346872520306688&quot;&gt;https://twitter.com/CrunchingData/status/1535346872520306688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nitro v0.9 now has a CLI that lets you &lt;code&gt;nitro run&lt;/code&gt; a URL pointing to a #Python file or gist on Github or anywhere else. Makes it easy to run examples: just copy/paste commands from the docs into your terminal.&lt;/p&gt;
&lt;p&gt;More: &lt;a href=&quot;https://nitro.h2o.ai/cli/&quot;&gt;https://nitro.h2o.ai/cli/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/nitro-cli-release.png&quot; alt=&quot;Nitro CLI docs&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Nitrogen - A rough prototype</title>
		<link href="https://wrong.technology/posts/nitrogen-prototype/"/>
		<updated>2022-06-04T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitrogen-prototype/</id>
		<content type="html">&lt;p&gt;Screencast: &lt;a href=&quot;https://twitter.com/CrunchingData/status/1533123923423834113&quot;&gt;https://twitter.com/CrunchingData/status/1533123923423834113&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nitro run URL&lt;/code&gt; fetches a &lt;code&gt;.py&lt;/code&gt; file from a gist, sets up a local virtual env, downloads additional datasets or files, and finally launches the app. A Dockerfile-like spec is required somewhere in the comments. No Docker involved. Just need Python.&lt;/p&gt;
&lt;p&gt;A single-command app runner like this makes it easy to share, clone, remix, run data apps without someone&#39;s cloud-hosting thingy in between. Creating git repos and readmes for each app is time-consuming and avoidable. Github gists and Gitlab snippets are low-friction.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nitro run&lt;/code&gt; isn&#39;t limited to Nitro apps (Nitro is a lib, not a server). The screencast above is simply launching a bog standard Flask app with Nitro and Bokeh in it, with the Palmer penguins CSV fetched on the fly. You could just as well run Tornado, Starlette, or Django.&lt;/p&gt;
&lt;p&gt;The new &lt;code&gt;nitro&lt;/code&gt; command is a zero-dependency executable written in Go. Planning to replace the built-in Nitro wheel&#39;s CLI with this one. Makes it easier to add support for other languages, including starter apps and templates.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Use Altair and Vega plots in Nitro apps</title>
		<link href="https://wrong.technology/posts/altair-plugin/"/>
		<updated>2022-05-31T00:00:00Z</updated>
		<id>https://wrong.technology/posts/altair-plugin/</id>
		<content type="html">&lt;p&gt;Nitro now has a plugin for the excellent Altair package: &lt;a href=&quot;https://github.com/h2oai/nitro-altair&quot;&gt;https://github.com/h2oai/nitro-altair&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Makes it easy to render Vega and Vega-Lite visualizations in apps.&lt;/p&gt;
&lt;p&gt;Here&#39;s the plugin in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/altair-plugin.gif&quot; alt=&quot;Altair Plugin&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;install&quot; tabindex=&quot;-1&quot;&gt;Install &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/altair-plugin/#install&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip install h2o-nitro-altair
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/altair-plugin/#usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Import the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; h2o_nitro_altair &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; altair_plugin&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; altair_box&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Register the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;nitro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;My App&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; caption&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;v1.0&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; plugins&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;altair_plugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Use the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Make a chart:&lt;/span&gt;&lt;br /&gt;chart &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; alt&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Chart&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cars&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;mark_point&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;encode&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;    x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Horsepower&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Miles_per_Gallon&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Origin&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;interactive&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Display the chart:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;altair_box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;chart&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;advanced-usage&quot; tabindex=&quot;-1&quot;&gt;Advanced Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/altair-plugin/#advanced-usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can pass &lt;a href=&quot;https://github.com/vega/vega-embed#options&quot;&gt;Vega Embed Options&lt;/a&gt; to &lt;code&gt;altair_box()&lt;/code&gt; for&lt;br /&gt;
more control:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;altair_box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;chart&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; options&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;renderer&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;svg&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scaleFactor&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Use Seaborn in Nitro apps</title>
		<link href="https://wrong.technology/posts/seaborn-plugin/"/>
		<updated>2022-05-30T00:00:00Z</updated>
		<id>https://wrong.technology/posts/seaborn-plugin/</id>
		<content type="html">&lt;p&gt;v0.2 of the &lt;a href=&quot;https://github.com/h2oai/nitro-matplotlib&quot;&gt;Matplotlib plugin&lt;/a&gt; adds support for capturing the &lt;code&gt;pyplot&lt;/code&gt; context, which means the Seaborn package works out of the box.&lt;/p&gt;
&lt;p&gt;If a figure is not provided to &lt;code&gt;matplotlib_box()&lt;/code&gt;, the global &lt;code&gt;matplotlib.pyplot&lt;/code&gt; instance is used as the source. This is useful when you&#39;re using something like Seaborn, which relies on matplotlib.pyplot, but not optimal when used inside a web app.&lt;/p&gt;
&lt;p&gt;pyplot maintains references to the opened figures to make &lt;code&gt;show()&lt;/code&gt; work, but this will cause memory leaks unless the figures are properly closed.&lt;/p&gt;
&lt;p&gt;Here&#39;s the plugin in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/seaborn-plugin.gif&quot; alt=&quot;Seaborn Plugin&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/seaborn-plugin/#usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Source: https://seaborn.pydata.org/examples/hexbin_marginals.html&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;sns&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_theme&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ticks&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;rs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;random&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RandomState&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; rs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;gamma&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;.5&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; rs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;normal&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;size&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;sns&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jointplot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; kind&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;hex&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;#4CB391&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Hexbin&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; matplotlib_box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Use Matplotlib in Nitro apps</title>
		<link href="https://wrong.technology/posts/matplotlib-plugin/"/>
		<updated>2022-05-29T00:00:00Z</updated>
		<id>https://wrong.technology/posts/matplotlib-plugin/</id>
		<content type="html">&lt;p&gt;Published a new plugin for using Matplotlib plots in Nitro apps: &lt;a href=&quot;https://github.com/h2oai/nitro-matplotlib&quot;&gt;https://github.com/h2oai/nitro-matplotlib&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uses the &lt;a href=&quot;https://matplotlib.org/3.5.0/users/explain/backends.html#the-builtin-backends&quot;&gt;Anti-Grain Geometry backend&lt;/a&gt;, since we&#39;re only going to render non-interactive PNG images.&lt;/p&gt;
&lt;p&gt;Here&#39;s the plugin in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/matplotlib-plugin.gif&quot; alt=&quot;Matplotlib Plugin&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;install&quot; tabindex=&quot;-1&quot;&gt;Install &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/matplotlib-plugin/#install&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip install h2o-nitro-matplotlib
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/matplotlib-plugin/#usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Import the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; h2o_nitro_matplotlib &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; matplotlib_plugin&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; matplotlib_box&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Register the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;nitro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;My App&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; caption&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;v1.0&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; plugins&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;matplotlib_plugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Use the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Make a figure:&lt;/span&gt;&lt;br /&gt;x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; np&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;linspace&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Sample data.&lt;/span&gt;&lt;br /&gt;fig &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Figure&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;ax &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; fig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;subplots&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;plot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;linear&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Plot some data on the axes.&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;plot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;quadratic&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Plot more data on the axes...&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;plot&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x &lt;span class=&quot;token operator&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;cubic&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# ... and some more.&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_xlabel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;x label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Add an x-label to the axes.&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;set_ylabel&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;y label&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Add a y-label to the axes.&lt;/span&gt;&lt;br /&gt;ax&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;legend&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;# Add a legend.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Display the figure:&lt;/span&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;matplotlib_box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fig&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>A Docker-like thing for apps</title>
		<link href="https://wrong.technology/posts/nitrogen-proposal/"/>
		<updated>2022-05-28T00:00:00Z</updated>
		<id>https://wrong.technology/posts/nitrogen-proposal/</id>
		<content type="html">&lt;p&gt;A rough proposal for a shebang-meets-dockerfile thingy, so that a .py file can specify its dependencies, and a &amp;quot;nitro run&amp;quot; command can directly launch an app from a file or gist or code snippet anywhere on the interwebs.&lt;/p&gt;
&lt;h2 id=&quot;goal&quot; tabindex=&quot;-1&quot;&gt;Goal &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitrogen-proposal/#goal&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Execute apps locally given one of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nitro run foo.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nitro run https://gist.github.com/user/hash&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;notes&quot; tabindex=&quot;-1&quot;&gt;Notes &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/nitrogen-proposal/#notes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The deps for the app are self-contained in the &lt;code&gt;.py&lt;/code&gt; file using a shebang-meets-dockerfile thingy:&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# --- env ---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# USE venv&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# RUN pip install pandas bokeh flask h2o-nitro&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# RUN FLASK_APP=app.py flask run&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# --- !env ---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# --- env ---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# USE venv&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# FILE requirements.txt EOF&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# pandas==4.5&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# bokeh&gt;=0.4.2&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# flask&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# h2o-nitro&gt;0.8.2&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# EOF&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# RUN pip install -r requirements.txt&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# RUN FLASK_APP=app.py flask run&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# --- !env ---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Supported commands are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;USE&lt;/code&gt; uses venv, conda, poetry, pipenv, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FILE&lt;/code&gt; creates a file relative to cwd.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RUN&lt;/code&gt; executes a shell command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt; fetches a file given a relative or absolute URL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COPY&lt;/code&gt; copies, moves, renames local files.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Link: &lt;a href=&quot;https://github.com/h2oai/nitro/issues/5&quot;&gt;https://github.com/h2oai/nitro/issues/5&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Use Bokeh in Nitro apps</title>
		<link href="https://wrong.technology/posts/bokeh-plugin/"/>
		<updated>2022-05-28T00:00:00Z</updated>
		<id>https://wrong.technology/posts/bokeh-plugin/</id>
		<content type="html">&lt;p&gt;Nitro v0.8 has an nifty little plugin mechanism to add new capabilities to Nitro while keeping the core compact. Hoping to get a modest Python plugin ecosystem going for using Pandas, matplotlib, etc.&lt;/p&gt;
&lt;p&gt;Published a Bokeh plugin today: &lt;a href=&quot;https://github.com/h2oai/nitro-bokeh&quot;&gt;https://github.com/h2oai/nitro-bokeh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And here&#39;s the plugin in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/bokeh-plugin.gif&quot; alt=&quot;Bokeh Plugin&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;install&quot; tabindex=&quot;-1&quot;&gt;Install &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/bokeh-plugin/#install&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;pip install h2o-nitro-bokeh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;usage&quot; tabindex=&quot;-1&quot;&gt;Usage &lt;a class=&quot;direct-link&quot; href=&quot;https://wrong.technology/posts/bokeh-plugin/#usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Import the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; h2o_nitro_bokeh &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; bokeh_plugin&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; bokeh_box&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Register the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;nitro &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; View&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;main&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;My App&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; caption&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;v1.0&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; plugins&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;bokeh_plugin&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Use the plugin:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-py&quot;&gt;&lt;code class=&quot;language-py&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Make a plot&lt;/span&gt;&lt;br /&gt;x &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;y &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;p &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; figure&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Simple line example&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; x_axis_label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;x&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y_axis_label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; legend_label&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Temp.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; line_width&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;# Display the plot&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;view&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bokeh_box&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Introducing Nitro</title>
		<link href="https://wrong.technology/posts/introducing-nitro/"/>
		<updated>2022-05-27T00:00:00Z</updated>
		<id>https://wrong.technology/posts/introducing-nitro/</id>
		<content type="html">&lt;p&gt;I&#39;ve been prototyping a new way to rapidly make web apps using pure #Python: &lt;a href=&quot;https://nitro.h2o.ai/&quot;&gt;H2O Nitro&lt;/a&gt;. It lets you program interactive GUIs using simple top-down code (no events, handlers, callbacks). Here’s a 7-page app in just 7 Python statements.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://wrong.technology/img/introducing-nitro.gif&quot; alt=&quot;Recruitment App&quot; /&gt;&lt;/p&gt;
&lt;p&gt;No HTML/CSS/Javascript know-how required. Plus, it&#39;s a library, not a full-blown web framework, so plugs into Flask, Tornado and Starlette. Think of it like a tiny edition of &lt;a href=&quot;https://github.com/h2oai/wave&quot;&gt;H2O Wave&lt;/a&gt;. Also, it&#39;s pre-alpha, so don&#39;t use it in production yet!&lt;/p&gt;
&lt;p&gt;We develop lots of apps at H2O. Ideas get prototyped, demo&#39;d, forked, cloned, modified all the time. There&#39;s 200-250 Wave  apps now - I&#39;ve lost count. And we&#39;re always looking for better, faster ways to go from prototype to production, while not losing on performance.&lt;/p&gt;
&lt;p&gt;So what&#39;s the motivation behind Nitro? App development is complicated (ahem). Leaving aside UX/UI design, most apps, at the implementation level, deal with at least two tiers: client and server. Each has its own programming language and framework.&lt;/p&gt;
&lt;p&gt;This implies at least two different kinds of developers, usually more if you include databases. Then there&#39;s the added (accidental) complexity of having to define and maintain an API or protocol for the UI and server to communicate correctly, even in the simplest of apps.&lt;/p&gt;
&lt;p&gt;In contrast, authoring command-line apps is fairly simple. With Python, for example, &lt;code&gt;input()&lt;/code&gt; waits for some input, and &lt;code&gt;print()&lt;/code&gt; shows some output. String together a sequence of &lt;code&gt;input()&lt;/code&gt; and &lt;code&gt;print()&lt;/code&gt; statements, and you&#39;ve got yourself an interactive app.&lt;/p&gt;
&lt;p&gt;What if we could bring that level of simplicity to GUIs and client-server programming?&lt;/p&gt;
&lt;p&gt;Granted, CLIs are not the unwieldy all-singing, all-dancing, event-driven state machines that GUIs are. But then again, a client server app with a GUI is not just any state machine, it&#39;s a distributed state machine.&lt;/p&gt;
&lt;p&gt;Nobody will argue that managing state in a distributed state machine is way more complex to reason about and implement correctly compared to a non-distributed one.&lt;/p&gt;
&lt;p&gt;So, if we have to develop interactive, graphical, distributed systems without having to deal with clients and servers and all the plumbing and ceremony in between, what would the simplest possible API look like?&lt;/p&gt;
&lt;p&gt;What would UI composition and layout code look like? What would form and input handling look like? What would UI flow and navigation control look like? How would we make all that code as minimal as possible?&lt;/p&gt;
&lt;p&gt;This is not just minimalism for minimalism&#39;s sake. Code rots. More code has more bugs. More code means more to read and understand and debate and reason about. It&#39;s also expensive to maintain: more code needs more programmers, and programmers have N^2 communication costs.&lt;/p&gt;
&lt;p&gt;The best code, therefore, is no code at all. So then what&#39;s a good balance between code brevity, clarity and expressiveness without losing too much in the way of performance?&lt;/p&gt;
&lt;p&gt;Further, can we stick with just one programming language for building the entire app? Can we target web, mobile and desktop apps from the same codebase? How quickly can we ship prototypes, get feedback, and iterate towards a finished product?&lt;/p&gt;
&lt;p&gt;More important, how can such a thing stay laser-focused on UIs, and not reinvent the wheel on networking, security, persistence, deployment and hosting? Can it plug into a framework of your choice, or even existing applications, yet provide a simpler way to ship front-ends?&lt;/p&gt;
&lt;p&gt;H2O Nitro is a very, very early stage prototype that tries to address the above requirements. It’s currently Python-only and only targets web apps, but we want to tackle R, Julia, Go at a minimum, and ship iOS/Android/Linux/OSX/Windows support by end 2022. Fingers crossed.&lt;/p&gt;
&lt;p&gt;So far the API and ergonomics feel right, and initial feedback has been really good, so it seems to be on the right track.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Big caveat 1:&lt;/strong&gt; Nitro is currently experimental. The API is mostly stable, but has critical missing features like cross-platform data visualization, back-button support in browsers, internationalization/localization, and live (real-time) sync. That said, we’ve started using it internally at H2O, with planned production usage, so expect rapid improvements and stability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Big caveat 2:&lt;/strong&gt; The UI and look/feel are strongly opinionated. Nitro is for you if you know Python basics, want to ship apps quickly, care about performance, don&#39;t want to futz around with obtuse front-end tooling, and don&#39;t care about a highly custom/branded UI.&lt;/p&gt;
&lt;p&gt;That&#39;s it for now. Follow the project on Github at &lt;a href=&quot;https://github.com/h2oai/nitro&quot;&gt;https://github.com/h2oai/nitro&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/h2o_nitro&quot;&gt;https://twitter.com/h2o_nitro&lt;/a&gt; for updates. I’m really excited about it, and would love to know what you think, what you’d like to see, and where you’d like to see it go.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
	</entry>
</feed>
